# WeKare Shared Package - Docker Compose Environment Configuration
# Use this for local development with Docker Compose
# Includes all services: PostgreSQL, MinIO (S3), Redis, etc.

# ==============================================
# ENVIRONMENT SETTINGS
# ==============================================
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=DEBUG

# ==============================================
# DATABASE CONFIGURATION (Docker)
# ==============================================
# PostgreSQL running in Docker container
DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/wekare_dev
SYNC_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/wekare_dev

# Database connection settings
DB_ECHO=false
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# ==============================================
# AWS S3 CONFIGURATION (MinIO in Docker)
# ==============================================
# MinIO S3-compatible service running in Docker
AWS_S3_BUCKET_NAME=wekare-dev-bucket
AWS_S3_REGION=us-east-1
AWS_S3_ENDPOINT_URL=http://localhost:9000
AWS_S3_USE_SSL=false
AWS_S3_SIGNATURE_VERSION=s3v4

# MinIO default credentials
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin

# ==============================================
# AWS GENERAL CONFIGURATION
# ==============================================
AWS_REGION=us-east-2
AWS_DEFAULT_REGION=us-east-2
AWS_ACCOUNT_ID=local-development

# ==============================================
# REDIS CONFIGURATION (Docker)
# ==============================================
# Redis running in Docker container
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# ==============================================
# SECURITY & AUTHENTICATION (Docker)
# ==============================================
JWT_SECRET=docker_dev_jwt_secret_key
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=60

# Development API key
MASTER_API_KEY=wekare-docker-dev-2024

# ==============================================
# EXTERNAL SERVICES (Development/Mock)
# ==============================================
SENDGRID_FROM_EMAIL=dev@localhost
TWILIO_PHONE_NUMBER=+15551234567

# ==============================================
# DOCKER-SPECIFIC SETTINGS
# ==============================================
# PostgreSQL settings for Docker
POSTGRES_DB=wekare_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# MinIO settings for Docker
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_CONSOLE_PORT=9001

# ==============================================
# SERVICE DISCOVERY (Docker Compose)
# ==============================================
# Use these when services communicate within Docker network
# DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/wekare_dev
# AWS_S3_ENDPOINT_URL=http://minio:9000
# REDIS_URL=redis://redis:6379/0

# ==============================================
# DEVELOPMENT TOOLS
# ==============================================
# Hot reload and development features
WATCHFILES_FORCE_POLLING=true
RELOAD=true

# ==============================================
# SAMPLE DOCKER COMPOSE USAGE
# ==============================================
# Create a docker-compose.yml with:
#
# version: '3.8'
# services:
#   postgres:
#     image: postgres:15
#     environment:
#       POSTGRES_DB: wekare_dev
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#
#   minio:
#     image: minio/minio
#     command: server /data --console-address ":9001"
#     environment:
#       MINIO_ROOT_USER: minioadmin
#       MINIO_ROOT_PASSWORD: minioadmin
#     ports:
#       - "9000:9000"
#       - "9001:9001"
#     volumes:
#       - minio_data:/data
#
#   redis:
#     image: redis:7-alpine
#     ports:
#       - "6379:6379"
#
# volumes:
#   postgres_data:
#   minio_data: 