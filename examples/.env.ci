# WeKare Shared Package - CI/CD Environment Configuration
# Use this for GitHub Actions, GitLab CI, Jenkins, etc.

# ==============================================
# ENVIRONMENT SETTINGS
# ==============================================
ENVIRONMENT=testing
DEBUG=false
LOG_LEVEL=INFO

# ==============================================
# DATABASE CONFIGURATION (CI)
# ==============================================
# In-memory or CI-specific test database
DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/wekare_ci_test
SYNC_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/wekare_ci_test

# Minimal connection settings for CI
DB_ECHO=false
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10

# ==============================================
# AWS S3 CONFIGURATION (CI/Mock)
# ==============================================
# Mock S3 service for CI testing
AWS_S3_BUCKET_NAME=wekare-ci-test-bucket
AWS_S3_REGION=us-east-1
AWS_S3_ENDPOINT_URL=http://localhost:9000
AWS_S3_USE_SSL=false
AWS_S3_SIGNATURE_VERSION=s3v4

# CI test credentials
AWS_ACCESS_KEY_ID=test-key
AWS_SECRET_ACCESS_KEY=test-secret

# ==============================================
# AWS GENERAL CONFIGURATION
# ==============================================
AWS_REGION=us-east-2
AWS_DEFAULT_REGION=us-east-2
AWS_ACCOUNT_ID=ci-testing

# ==============================================
# SECURITY & AUTHENTICATION (CI)
# ==============================================
JWT_SECRET=ci_test_jwt_secret_key_not_for_production
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=15

# CI test API key
MASTER_API_KEY=wekare-ci-test-2024

# ==============================================
# CI-SPECIFIC SETTINGS
# ==============================================
# Enable test mode
WEKARE_TEST_MODE=true

# Test database
TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/wekare_ci_test

# Test organization and user IDs
TEST_ORG_ID=12345678-1234-5678-9abc-123456789012
TEST_USER_ID=11111111-1111-1111-1111-111111111111

# ==============================================
# EXTERNAL SERVICES (CI/Mock)
# ==============================================
SENDGRID_FROM_EMAIL=ci-test@wekare.com
TWILIO_PHONE_NUMBER=+15551234567

# ==============================================
# CI PERFORMANCE SETTINGS
# ==============================================
# Reduce timeouts for faster CI runs
HTTP_TIMEOUT=30
DATABASE_TIMEOUT=10
S3_TIMEOUT=15

# ==============================================
# COVERAGE AND REPORTING
# ==============================================
# Enable coverage reporting
COVERAGE=true
PYTEST_ARGS=--cov=shared --cov-report=xml --cov-report=term

# ==============================================
# GITHUB ACTIONS EXAMPLE
# ==============================================
# # .github/workflows/test.yml
# name: Test
# on: [push, pull_request]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_PASSWORD: postgres
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432
#       minio:
#         image: minio/minio
#         env:
#           MINIO_ROOT_USER: test-key
#           MINIO_ROOT_PASSWORD: test-secret
#         options: >-
#           --health-cmd "curl -f http://localhost:9000/minio/health/live"
#           --health-interval 30s
#           --health-timeout 20s
#           --health-retries 3
#         ports:
#           - 9000:9000
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'
#       - name: Install dependencies
#         run: |
#           pip install poetry
#           poetry install
#       - name: Run tests
#         env:
#           DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/wekare_ci_test
#           AWS_S3_BUCKET_NAME: wekare-ci-test-bucket
#           AWS_ACCESS_KEY_ID: test-key
#           AWS_SECRET_ACCESS_KEY: test-secret
#           AWS_S3_ENDPOINT_URL: http://localhost:9000
#         run: poetry run pytest 